# Definition for singly-linked list with a random pointer.
# class RandomListNode(object):
#     def __init__(self, x):
#         self.label = x
#         self.next = None
#         self.random = None

class Solution(object):
    def copyRandomList(self, head):
        """
        :type head: RandomListNode
        :rtype: RandomListNode
        """
        def clone_node(node):
            if not node:
                return None

            node_cloned = self.node_to_clone_map[node] = RandomListNode(node.label)
            node_cloned.next = clone_node(node.next)
            node_cloned.random = self.node_to_clone_map.get(node.random)
            return node_cloned

        self.node_to_clone_map = dict()
        return clone_node(head)
