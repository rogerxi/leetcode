class Solution(object):
    def maximalSquare(self, matrix):
        """
        :type matrix: List[List[str]]
        :rtype: int
        """
        if not matrix:
            return 0

        height, width = len(matrix), len(matrix[0])
        # Global and local maximal side length.
        max_side_lengths = [[[0, 0] for j in xrange(width + 1)] for i in xrange(height + 1)]
        for i in xrange(1, height + 1):
            for j in xrange(1, width + 1):
                if matrix[i - 1][j - 1] == '1':
                    local_max_side_length = 1 + min([
                        max_side_lengths[i - 1][j][1],
                        max_side_lengths[i][j - 1][1],
                        max_side_lengths[i - 1][j - 1][1]])
                else:
                    local_max_side_length = 0

                max_side_lengths[i][j] = [
                    max([max_side_lengths[i - 1][j][0], max_side_lengths[i][j - 1][0], local_max_side_length]),
                    local_max_side_length]

        return max_side_lengths[height][width][0] ** 2
