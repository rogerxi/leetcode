class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        length = len(nums)
        low, high = 0, length - 1
        while low <= high:
            if target == nums[low]:
                return low
            elif target == nums[high]:
                return high

            mid = (low + high) / 2
            if target == nums[mid]:
                return mid
            elif target < nums[low] <= nums[mid] or (target > nums[mid] and (nums[mid] > nums[low] or target < nums[high])):
                low = mid + 1
            else:
                high = mid - 1

        return -1


## Bisect algo.
