# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        def recurse(node):
            if not node:
                return True, 0
            
            is_left_balanced, left_height = recurse(node.left)
            if is_left_balanced:
                is_right_balanced, right_height = recurse(node.right)
                if is_right_balanced and abs(left_height - right_height) <= 1:
                    return True, max(left_height, right_height) + 1
            
            return False, -1
        
        return recurse(root)[0]
