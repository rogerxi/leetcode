# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def merge(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
        # Sort by first value.
        intervals_sorted = sorted(intervals, key=lambda x: x.start)
        intervals_merged = []
        length = len(intervals_sorted)
        i = 0
        while i < length:
            end = intervals_sorted[i].end
            for j in xrange(i + 1, length):
                if intervals_sorted[j].start <= end:
                    end = max(end, intervals_sorted[j].end)
                else:
                    j -= 1
                    break

            intervals_merged.append(Interval(intervals_sorted[i].start, end))
            if i == length - 1:
                break
            else:
                i = j + 1

        return intervals_merged
